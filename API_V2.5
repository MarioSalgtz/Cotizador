from flask import Flask, request, jsonify
from selenium import webdriver
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
import time

app = Flask(__name__)

# 99 ------------------------------------------------------------------------------------------------------------   
@app.route("/99", methods=['POST'])
def get_99():
    data = request.get_json()
    zip_origen = data.get('zip_origen')
    zip_destino = data.get('zip_destino')
    Largo = data.get('Largo')
    Ancho = data.get('Ancho')
    Alto = data.get('Alto')
    peso_kg = data.get('peso_kg')

    options = webdriver.ChromeOptions()
    options.add_argument('headless')
    options.add_argument('--disable-gpu')
    options.add_argument('--no-sandbox')

    driver = webdriver.Chrome(options=options)

    try:
        driver.get("https://enviaya.com.mx/es/paqueterias/99minutos/")

        input_field_from = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.ID, "quote_from")))
        input_field_from.send_keys(zip_origen)
        time.sleep(1)
        input_field_from.send_keys(Keys.ARROW_DOWN, Keys.RETURN)

        input_field_to = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.ID, "quote_to")))
        input_field_to.send_keys(zip_destino)
        time.sleep(1)
        input_field_to.send_keys(Keys.ARROW_DOWN, Keys.RETURN)

        package_option = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.XPATH, "//label[@for='shipping-22']")))
        package_option.click()
        time.sleep(1)

        length_field = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.NAME, "shipment[parcels][0][length]")))
        length_field.send_keys(Largo)

        width_field = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.NAME, "shipment[parcels][0][width]")))
        width_field.send_keys(Ancho)

        height_field = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.NAME, "shipment[parcels][0][height]")))
        height_field.send_keys(Alto)

        weight_input = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.NAME, "shipment[parcels][0][weight]")))
        weight_input.send_keys(peso_kg)

        weight_input.send_keys(Keys.RETURN)

        quote_price_99 = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.CSS_SELECTOR, "span.rate-board-item__price")))
        price_text_99 = quote_price_99.text
        price_99 = price_text_99.split(" ")[-1]

        delivery_time = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.CSS_SELECTOR, "span.rate-board-item__time-hrs")))
        delivery_99 = delivery_time.text.strip("()")

        driver.quit()

        return jsonify({
            "99Minutos": {
                "precio": "$" + price_99,
                "entrega_estimada": delivery_99,
                "imagen_logo": "https://guiapaqueteria.com/wp-content/uploads/2018/06/99-Minutos-Logo-GuiaPaq-e1529691248291.jpg"
            }
        })

    except Exception as e:
        driver.quit()
        return jsonify({"error": str(e)}), 500
    
# EXPRESS ------------------------------------------------------------------------------------------------------------  
@app.route("/express", methods=['POST'])
def get_Express():
    data = request.get_json()
    zip_origen = data.get('zip_origen')
    zip_destino = data.get('zip_destino')
    Largo = data.get('Largo')
    Ancho = data.get('Ancho')
    Alto = data.get('Alto')
    peso_kg = data.get('peso_kg')

    options = webdriver.ChromeOptions()
    options.add_argument('headless')
    options.add_argument('--disable-gpu')
    options.add_argument('--no-sandbox')

    driver = webdriver.Chrome(options=options)

    try:
        driver.get("https://enviaya.com.mx/es/paqueterias/paquetexpress/")

        input_field_from = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.ID, "quote_from")))
        input_field_from.send_keys(zip_origen)
        time.sleep(1)
        input_field_from.send_keys(Keys.ARROW_DOWN, Keys.RETURN)

        input_field_to = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.ID, "quote_to")))
        input_field_to.send_keys(zip_destino)
        time.sleep(1)
        input_field_to.send_keys(Keys.ARROW_DOWN, Keys.RETURN)

        package_option = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.XPATH, "//label[@for='shipping-22']")))
        package_option.click()
        time.sleep(1)

        length_field = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.NAME, "shipment[parcels][0][length]")))
        length_field.send_keys(Largo)

        width_field = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.NAME, "shipment[parcels][0][width]")))
        width_field.send_keys(Ancho)

        height_field = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.NAME, "shipment[parcels][0][height]")))
        height_field.send_keys(Alto)

        weight_input = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.NAME, "shipment[parcels][0][weight]")))
        weight_input.send_keys(peso_kg)
        weight_input.send_keys(Keys.RETURN)

        quote_price_express = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.CSS_SELECTOR, "span.rate-board-item__price")))
        price_text_express = quote_price_express.text
        price_express = price_text_express.split(" ")[-1]

        delivery_time = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.CSS_SELECTOR, "span.rate-board-item__time-hrs")))
        delivery_express = delivery_time.text.strip("()")

        driver.quit()

        return jsonify(
            {
                "PaqueteExpress": {
                    "precio": "$" + price_express,
                    "entrega_estimada": delivery_express,
                    "imagen_logo": "https://www.logotypes101.com/logos/686/033FF03C7016CA242A0D61A8A3072AAD/paquetexpress.png"

                }
            }
        )
    except Exception as e:
        driver.quit()
        return jsonify({"error": str(e)}), 500
    
# TRES GUERRAS ------------------------------------------------------------------------------------------------------------
@app.route("/tres", methods=['POST'])
def get_Tres():
    data = request.get_json()
    zip_origen = data.get('zip_origen')
    zip_destino = data.get('zip_destino')
    Largo = data.get('Largo')
    Ancho = data.get('Ancho')
    Alto = data.get('Alto')
    peso_kg = data.get('peso_kg')

    options = webdriver.ChromeOptions()
    options.add_argument('headless')
    options.add_argument('--disable-gpu')
    options.add_argument('--no-sandbox')

    driver = webdriver.Chrome(options=options)

    try:
        driver.get("https://enviaya.com.mx/es/paqueterias/tresguerras/")

        input_field_from = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.ID, "quote_from")))
        input_field_from.send_keys(zip_origen)
        time.sleep(1)
        input_field_from.send_keys(Keys.ARROW_DOWN, Keys.RETURN)

        input_field_to = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.ID, "quote_to")))
        input_field_to.send_keys(zip_destino)
        time.sleep(1)
        input_field_to.send_keys(Keys.ARROW_DOWN, Keys.RETURN)

        package_option = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.XPATH, "//label[@for='shipping-22']")))
        package_option.click()
        time.sleep(1)

        length_field = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.NAME, "shipment[parcels][0][length]")))
        length_field.send_keys(Largo)

        width_field = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.NAME, "shipment[parcels][0][width]")))
        width_field.send_keys(Ancho)

        height_field = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.NAME, "shipment[parcels][0][height]")))
        height_field.send_keys(Alto)

        weight_input = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.NAME, "shipment[parcels][0][weight]")))
        weight_input.send_keys(peso_kg)
        weight_input.send_keys(Keys.RETURN)

        quote_price_tres = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.CSS_SELECTOR, "span.rate-board-item__price")))
        price_text_tres = quote_price_tres.text
        price_tres = price_text_tres.split(" ")[-1]

        delivery_time = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.CSS_SELECTOR, "span.rate-board-item__time-hrs")))
        delivery_tres = delivery_time.text.strip("()")

        driver.quit()

        return jsonify(
            {
                "TresGuerras": {
                    "precio": price_tres,
                    "entrega_estimada": delivery_tres,
                    "imagen_logo": "https://www.tresguerras.com.mx/3G/img/logo3.png"
                }
            }
        )
    except Exception as e:
        driver.quit()
        return jsonify({"error": str(e)}), 500
# REDPACK ------------------------------------------------------------------------------------------------------------
@app.route("/red", methods=['POST'])
def get_Red():
    data = request.get_json()
    zip_origen = data.get('zip_origen')
    zip_destino = data.get('zip_destino')
    Largo = data.get('Largo')
    Ancho = data.get('Ancho')
    Alto = data.get('Alto')
    peso_kg = data.get('peso_kg')

    options = webdriver.ChromeOptions()
    options.add_argument('headless')
    options.add_argument('--disable-gpu')
    options.add_argument('--no-sandbox')

    driver = webdriver.Chrome(options=options)

    driver.get("https://enviaya.com.mx/es/paqueterias/redpack/")

    input_field_from = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.ID, "quote_from")))
    input_field_from.send_keys(zip_origen)
    time.sleep(1)
    input_field_from.send_keys(Keys.ARROW_DOWN, Keys.RETURN)

    input_field_to = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.ID, "quote_to")))
    input_field_to.send_keys(zip_destino)
    time.sleep(1)
    input_field_to.send_keys(Keys.ARROW_DOWN, Keys.RETURN)

    package_option = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.XPATH, "//label[@for='shipping-22']")))
    package_option.click()
    time.sleep(1)

    length_field = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.NAME, "shipment[parcels][0][length]")))
    length_field.send_keys(Largo)

    width_field = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.NAME, "shipment[parcels][0][width]")))
    width_field.send_keys(Ancho)

    height_field = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.NAME, "shipment[parcels][0][height]")))
    height_field.send_keys(Alto)

    weight_input = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.NAME, "shipment[parcels][0][weight]")))
    weight_input.send_keys(peso_kg)
    weight_input.send_keys(Keys.RETURN)

    quote_price_red = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.CSS_SELECTOR, "span.rate-board-item__price")))
    price_text_red = quote_price_red.text
    price_red = price_text_red.split(" ")[-1]

    delivery_time = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.CSS_SELECTOR, "span.rate-board-item__time-hrs")))
    delivery_red = delivery_time.text.strip("()")

    driver.quit()

    return jsonify(
        {
            "REDPACK": {
                "precio": price_red,
                "entrega_estimada": delivery_red,
                "imagen_logo": "https://webqa.redpack.com.mx/wp-content/uploads/2021/06/logored.png"
            }
        }
    )

# UPS ------------------------------------------------------------------------------------------------------------
@app.route("/ups", methods=['POST'])
def get_UPS():
    data = request.get_json()
    zip_origen = data.get('zip_origen')
    zip_destino = data.get('zip_destino')
    Largo = data.get('Largo')
    Ancho = data.get('Ancho')
    Alto = data.get('Alto')
    peso_kg = data.get('peso_kg')

    options = webdriver.ChromeOptions()
    options.add_argument('headless')
    options.add_argument('--disable-gpu')
    options.add_argument('--no-sandbox')
   
    driver = webdriver.Chrome(options=options)

    driver.get("https://enviaya.com.mx/es/paqueterias/ups/")

    input_field_from = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.ID, "quote_from")))
    input_field_from.send_keys(zip_origen)
    time.sleep(1)
    input_field_from.send_keys(Keys.ARROW_DOWN, Keys.RETURN)

    input_field_to = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.ID, "quote_to")))
    input_field_to.send_keys(zip_destino)
    time.sleep(1)
    input_field_to.send_keys(Keys.ARROW_DOWN, Keys.RETURN)

    package_option = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.XPATH, "//label[@for='shipping-22']")))
    package_option.click()
    time.sleep(1)

    length_field = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.NAME, "shipment[parcels][0][length]")))
    length_field.send_keys(Largo)

    width_field = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.NAME, "shipment[parcels][0][width]")))
    width_field.send_keys(Ancho)

    height_field = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.NAME, "shipment[parcels][0][height]")))
    height_field.send_keys(Alto)

    weight_input = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.NAME, "shipment[parcels][0][weight]")))
    weight_input.send_keys(peso_kg)
    weight_input.send_keys(Keys.RETURN)

    quote_price_ups = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.CSS_SELECTOR, "span.rate-board-item__price")))
    price_text_ups = quote_price_ups.text
    price_ups = price_text_ups.split(" ")[-1]

    delivery_time = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.CSS_SELECTOR, "span.rate-board-item__time-hrs")))
    delivery_ups = delivery_time.text.strip("()")

    driver.quit()

    return jsonify(
        {
            "UPS": {
                "precio": "$" + price_ups,
                "entrega_estimada": delivery_ups,
                "imagen_logo": "https://logodownload.org/wp-content/uploads/2014/04/ups-logo-0.png"
            }
        }
    )

# FEDEX ------------------------------------------------------------------------------------------------------------
@app.route("/fedex", methods=['POST'])
def get_FEDEX():
    data = request.get_json()
    zip_origen = data.get('zip_origen')
    zip_destino = data.get('zip_destino')
    Largo = data.get('Largo')
    Ancho = data.get('Ancho')
    Alto = data.get('Alto')
    peso_kg = data.get('peso_kg')

    options = webdriver.ChromeOptions()
    #options.add_argument('headless')
    options.add_argument('--disable-gpu')
    options.add_argument('--no-sandbox')
   
    driver = webdriver.Chrome(options=options)

    url = "https://www.fedex.com/es-mx/home.html#"

    driver.minimize_window() # Minimizar la ventana del navegador

    driver.get(url)

    button = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.CSS_SELECTOR, ".fxg-cube__content")))
    button.click()

    input_field = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.ID, "fromGoogleAddress")))
    input_field.send_keys(zip_origen)
    time.sleep(1)
    input_field.send_keys(Keys.ARROW_DOWN, Keys.RETURN)

    input_field2 = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.ID, "toGoogleAddress")))
    input_field2.send_keys(zip_destino)
    time.sleep(2)
    input_field2.send_keys(Keys.ARROW_DOWN, Keys.RETURN)

    weight_field = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.ID, "package-details__weight-0")))
    weight_field.send_keys(peso_kg)

    length_field = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.CSS_SELECTOR, '[formcontrolname="length"]')))
    length_field.send_keys(Largo)

    width_field = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.CSS_SELECTOR, '[formcontrolname="width"]')))
    width_field.send_keys(Ancho)

    height_field = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.CSS_SELECTOR, '[formcontrolname="height"]')))
    height_field.send_keys(Alto)

    submit_button = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.ID, "e2ePackageDetailsSubmitButtonRates")))
    submit_button.submit()

    price_button = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.CSS_SELECTOR, ".magr-c-rates__button")))
    
    # Extraer Precio
    price_FEDEX = price_button.text

    delivery_info = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.CSS_SELECTOR, ".fdx-c-definitionlist__description.fdx-u-font-size--h6.fdx-u-text--light")))
    delivery_fedex = delivery_info.text.strip("()")
    delivery_days = delivery_fedex.split(" ")[0]

    driver.quit()

    return jsonify(
        {
            "FEDEX": {
                "precio": price_FEDEX,
                "entrega_estimada": delivery_fedex,
                "imagen_logo": "https://static.vecteezy.com/system/resources/previews/022/101/032/non_2x/fedex-logo-transparent-free-png.png"
            }
        }
    )

# ESTAFETA ------------------------------------------------------------------------------------------------------------
@app.route("/estafeta", methods=['POST'])
def get_Estafeta():
    data = request.get_json()
    zip_origen = data.get('zip_origen')
    zip_destino = data.get('zip_destino')
    Largo = data.get('Largo')
    Ancho = data.get('Ancho')
    Alto = data.get('Alto')
    peso_kg = data.get('peso_kg')

    options = webdriver.ChromeOptions()
    options.add_argument('headless')
    options.add_argument('--disable-gpu')
    options.add_argument('--no-sandbox')

    driver = webdriver.Chrome(options=options)

    try:
        driver.get("https://enviaya.com.mx/es/paqueterias/estafeta/cotizador/?utm_campaign=686904761&utm_source=bing&utm_medium=cpc&utm_content=&utm_term=estafeta%20cotizador&adgroupid=1276534639665967&network=o&device=c&adposition=?matchtype=e&placement=&msclkid=a03a2bc381271bfa19d44dd3c843596b")

        input_field_from = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.ID, "quote_from")))
        input_field_from.send_keys(zip_origen)
        time.sleep(1)
        input_field_from.send_keys(Keys.ARROW_DOWN, Keys.RETURN)

        input_field_to = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.ID, "quote_to")))
        input_field_to.send_keys(zip_destino)
        time.sleep(1)
        input_field_to.send_keys(Keys.ARROW_DOWN, Keys.RETURN)

        package_option = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.XPATH, "//label[@for='shipping-2']")))
        package_option.click()
        time.sleep(1)

        length_field = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.NAME, "shipment[parcels][0][length]")))
        length_field.send_keys(Largo)

        width_field = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.NAME, "shipment[parcels][0][width]")))
        width_field.send_keys(Ancho)

        height_field = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.NAME, "shipment[parcels][0][height]")))
        height_field.send_keys(Alto)

        weight_field = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.NAME, "shipment[parcels][0][weight]")))
        weight_field.send_keys(peso_kg)

        submit_button = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.CSS_SELECTOR, "button[type='submit']")))
        submit_button.click()

        quote_price = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.CSS_SELECTOR, "span.rate-board-item__price")))
        price_text = quote_price.text
        price_ESTAFETA = price_text.split(" ")[-1]

        delivery_time = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.CSS_SELECTOR, "span.rate-board-item__time-hrs")))
        delivery_estafeta = delivery_time.text.strip("()")

        driver.quit()

        return jsonify(
            {
                "Estafeta": {
                    "precio": '$' + price_ESTAFETA,
                    "entrega_estimada": delivery_estafeta,
                    "imagen_logo": "https://www.logotypes101.com/logos/198/688260FAE2BD34C98FADB76D942DD3B6/Estafeta.png"
                }
            }
        )
    except Exception as e:
        driver.quit()
        return jsonify({"error": str(e)}), 500
# DHL ------------------------------------------------------------------------------------------------------------
@app.route("/dhl", methods=['POST'])
def get_DHL():
    data = request.get_json()
    zip_origen = data.get('zip_origen')
    zip_destino = data.get('zip_destino')
    Largo = data.get('Largo')
    Ancho = data.get('Ancho')
    Alto = data.get('Alto')
    peso_kg = data.get('peso_kg')

    url = "https://www.dhl.com/mx-es/home/obtener-una-cotizacion.html"

    options = Options()
    
    options.add_argument("--disable-blink-features=AutomationControlled")

    driver = webdriver.Chrome(options=options)

    #driver.minimize_window() # Minimizar la ventana del navegador

    driver.get(url)

    button = WebDriverWait(driver, 20).until(EC.element_to_be_clickable((By.ID, "onetrust-accept-btn-handler")))
    button.click()

    input_field = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.ID, "originZip")))
    input_field.send_keys(zip_origen)
    time.sleep(1)
    input_field.send_keys(Keys.ARROW_DOWN, Keys.RETURN)

    input_field2 = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.ID, "destinationZip")))
    input_field2.send_keys(zip_destino)
    time.sleep(1)
    input_field2.send_keys(Keys.ARROW_DOWN, Keys.RETURN)
    time.sleep(1)
    input_field2.send_keys(Keys.ENTER)

    weight_field = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.ID, "weight-0")))
    weight_field.send_keys(peso_kg)

    length_field = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.ID, "length-0")))
    length_field.send_keys(Largo)

    width_field = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.ID, "width-0")))
    width_field.send_keys(Ancho)

    height_field = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.ID, "height-0")))
    height_field.send_keys(Alto)

    quote_button = WebDriverWait(driver, 30).until(EC.presence_of_element_located((By.XPATH, '//button[@data-testid="get-a-quote-button"]')))
    quote_button.submit()

    # Extraer el precio de DHL
    price_element = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.XPATH, '//p[@data-testid="offer-price"]')))
    price_DHL = price_element.text.split(" ")[1]

    delivery_element = WebDriverWait(driver, 20).until(EC.presence_of_element_located((By.XPATH, '//p[@class="styled__headlineStyles-sc-18g9jku-0-p jqogyx styled__DeliveryDateHeadline-sc-1tmeq25-3 gfSUnk horizontal-card-headline L4"]')))
    delivery_dhl = delivery_element.text

    driver.quit()

    return jsonify(
        {
            "DHL": {
                "precio": price_DHL,
                "entrega_estimada": delivery_dhl,
                "imagen_logo": "https://pixelbag.net/wp-content/uploads/2022/03/dhl-vector-logo-768x768.jpg"
            }
        }
    )

if __name__ == "__main__":
    app.run(debug=True)
